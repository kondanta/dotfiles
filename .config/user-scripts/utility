#!/bin/sh

extract () {
    for archive in $*; do
	if [ -f $archive ] ; then
	    case $archive in
		*.tar.bz2)   tar xvjf $archive    ;;
		*.tar.gz)    tar xvzf $archive    ;;
		*.bz2)       bunzip2 $archive     ;;
		*.rar)       rar x $archive       ;;
		*.gz)        gunzip $archive      ;;
		*.tar)       tar xvf $archive     ;;
		*.tbz2)      tar xvjf $archive    ;;
		*.tgz)       tar xvzf $archive    ;;
		*.zip)       unzip $archive       ;;
		*.Z)         uncompress $archive  ;;
		*.7z)        7z x $archive        ;;
		*)           echo "don't know how to extract '$archive'..." ;;
	    esac
	else
	    echo "'$archive' is not a valid file!"
	fi
    done
}

# Copy file with a progress bar
cpp() {
    set -e
    strace -q -ewrite cp -- "${1}" "${2}" 2>&1 \
	| awk '{
	  count += $NF
	if (count % 10 == 0) {
	   	percent = count / total_size * 100
			printf "%3d%% [", percent
			for (i=0;i<=percent;i++)
			    printf "="
			printf ">"
			for (i=percent;i<100;i++)
			    	printf " "
					printf "]\r"
			}
		}
	END { print "" }' total_size=$(stat -c '%s' "${1}") count=0
}

newline_to_comma() {
    if [ ${#} -ne 2 ]; then
	echo "Usage:"
	echo "newline-to-comma newlineFile outputFile"
	return 1
    fi

    cat $1 | sed -n -e 'H;${x;s/\n/,/g;s/^,//;p;}' > $2
}

comma_to_newline() {
    if [ ${#} -ne 2 ]; then
	echo "Usage:"
	echo "comma-to-newline 'Some,text,with,commas' outFile"
	return 1
    fi

    echo "$1" | tr ',' '\n' > $2
}

upd() {
    case "$OSTYPE" in
	linux*)
		# rate-mirrors --disable-comments --save $HOME/.config/mirrorlist/mirrorlist arch
		paru -Syyuv
	    ;;
	darwin*)
	    brew update && brew upgrade
	    ;;
    esac
}

gpg-list() {
    gpg2 --list-secret-keys --keyid-format LONG
}

gpg-export() {
    gpg2 --armor --export $1
}

wifi() {
	nmtui
}

rankpacman() {
	curl -s "https://archlinux.org/mirrorlist/?country=NO&country=SE&protocol=https&use_mirror_status=on" | sed -e 's/^#Server/Server/' -e '/^#/d' | rankmirrors -n 5 -
}
