# ==========================
# ===  General settings  ===
# ==========================

set -g default-terminal "screen-256color"
set -g terminal-overrides ",alacritty:RGB"
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on

set -g @tmux_power_theme 'sky'
set -g @plugin 'wfxr/tmux-power'


# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-x

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on

# ==========================
# ===   Key bindings     ===
# ==========================

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind \}    # swap-pane -D
unbind \{    # swap-pane -U
unbind [    # paste-buffer
unbind ]
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left


# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf && tmux display \"Config reloaded\"'"

# Reload tmux configuration
bind C-r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded"

# new window and retain cwd
bind n new-window -c "#{pane_current_path}"

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session and window
bind , command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind b split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

# Select pane and windows
bind -r h previous-window
bind -r j next-window
bind -r C-j select-pane -t :.-
bind -r C-k select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# Copy text
bind [ copy-mode

# Bind Space in copy-mode to begin selection
bind -T copy-mode Space send-keys -X begin-selection

# Bind Enter to copy selection and exit copy mode
bind -T copy-mode Enter send-keys -X copy-selection-and-cancel

# Zoom pane
bind + resize-pane -Z

# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
bind \\ if '[ #{pane_index} -eq 1 ]' \
     'swap-pane -s "!"' \
     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# Kill pane/window/session shortcuts
bind k kill-pane
bind K kill-window
bind C-c confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'



# ==================================================
# === Window monitoring for activity and silence ===
# ==================================================
bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# Check this out; https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf

# TPM
set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
run -b '~/.config/tmux/plugins/tpm/tpm'
